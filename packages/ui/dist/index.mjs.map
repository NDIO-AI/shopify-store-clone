{"version":3,"sources":["../src/components/button.tsx","../src/lib/utils.ts","../src/components/card.tsx","../src/components/input.tsx","../src/components/product-card.tsx","../src/components/store-card.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"../lib/utils\";\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none ring-offset-[hsl(var(--background))]\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-[hsl(var(--primary))] text-[hsl(var(--primary-foreground))] hover:bg-[hsl(var(--primary))]/90\",\n        destructive: \"bg-[hsl(var(--destructive))] text-[hsl(var(--destructive-foreground))] hover:bg-[hsl(var(--destructive))]/90\",\n        outline: \"border border-[hsl(var(--input))] hover:bg-[hsl(var(--accent))] hover:text-[hsl(var(--accent-foreground))]\",\n        secondary: \"bg-[hsl(var(--secondary))] text-[hsl(var(--secondary-foreground))] hover:bg-[hsl(var(--secondary))]/80\",\n        ghost: \"hover:bg-[hsl(var(--accent))] hover:text-[hsl(var(--accent-foreground))]\",\n        link: \"underline-offset-4 hover:underline text-[hsl(var(--primary))]\",\n      },\n      size: {\n        default: \"h-10 py-2 px-4\",\n        sm: \"h-9 px-3 rounded-md\",\n        lg: \"h-11 px-8 rounded-md\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n);\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = \"button\";\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants };\n","import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n","import * as React from \"react\";\n\nimport { cn } from \"../lib/utils\";\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-[hsl(var(--card))] text-[hsl(var(--card-foreground))] shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n));\nCard.displayName = \"Card\";\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n));\nCardHeader.displayName = \"CardHeader\";\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n));\nCardTitle.displayName = \"CardTitle\";\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-[hsl(var(--muted-foreground))]\", className)}\n    {...props}\n  />\n));\nCardDescription.displayName = \"CardDescription\";\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n));\nCardContent.displayName = \"CardContent\";\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n));\nCardFooter.displayName = \"CardFooter\";\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent };\n","import * as React from \"react\";\n\nimport { cn } from \"../lib/utils\";\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-[hsl(var(--background))] px-3 py-2 text-sm ring-offset-[hsl(var(--background))] file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nInput.displayName = \"Input\";\n\nexport { Input };\n","import * as React from \"react\";\nimport { Card, CardContent, CardFooter } from \"./card\";\nimport { Button } from \"./button\";\n\nexport interface ProductCardProps {\n  id: string;\n  name: string;\n  price: number;\n  image: string;\n  description?: string;\n  onAddToCart?: (id: string) => void;\n}\n\nexport function ProductCard({\n  id,\n  name,\n  price,\n  image,\n  description,\n  onAddToCart,\n}: ProductCardProps) {\n  return (\n    <Card className=\"overflow-hidden\">\n      <div className=\"aspect-square w-full overflow-hidden\">\n        <img\n          src={image}\n          alt={name}\n          className=\"h-full w-full object-cover transition-all hover:scale-105\"\n        />\n      </div>\n      <CardContent className=\"p-4\">\n        <div className=\"flex items-center justify-between\">\n          <h3 className=\"font-semibold text-lg\">{name}</h3>\n          <p className=\"font-medium text-lg\">${price.toFixed(2)}</p>\n        </div>\n        {description && (\n          <p className=\"text-sm text-[hsl(var(--muted-foreground))] mt-2 line-clamp-2\">\n            {description}\n          </p>\n        )}\n      </CardContent>\n      <CardFooter className=\"p-4 pt-0\">\n        <Button\n          onClick={() => onAddToCart?.(id)}\n          className=\"w-full\"\n          variant=\"secondary\"\n        >\n          Add to Cart\n        </Button>\n      </CardFooter>\n    </Card>\n  );\n}\n","import * as React from \"react\";\nimport { Card, CardContent, CardFooter } from \"./card\";\nimport { Button } from \"./button\";\n\nexport interface StoreCardProps {\n  id: string;\n  name: string;\n  description?: string;\n  image?: string;\n  onVisitStore?: (id: string) => void;\n}\n\nexport function StoreCard({\n  id,\n  name,\n  description,\n  image,\n  onVisitStore,\n}: StoreCardProps) {\n  return (\n    <Card className=\"overflow-hidden\">\n      {image && (\n        <div className=\"aspect-video w-full overflow-hidden\">\n          <img\n            src={image}\n            alt={name}\n            className=\"h-full w-full object-cover transition-all hover:scale-105\"\n          />\n        </div>\n      )}\n      <CardContent className=\"p-4\">\n        <h3 className=\"font-semibold text-lg\">{name}</h3>\n        {description && (\n          <p className=\"text-sm text-[hsl(var(--muted-foreground))] mt-2 line-clamp-3\">\n            {description}\n          </p>\n        )}\n      </CardContent>\n      <CardFooter className=\"p-4 pt-0\">\n        <Button\n          onClick={() => onVisitStore?.(id)}\n          className=\"w-full\"\n          variant=\"outline\"\n        >\n          Visit Store\n        </Button>\n      </CardFooter>\n    </Card>\n  );\n}\n"],"mappings":";AAAA,YAAY,WAAW;AACvB,SAAS,WAA8B;;;ACDvC,SAAS,YAA6B;AACtC,SAAS,eAAe;AAEjB,SAAS,MAAM,QAAsB;AAC1C,SAAO,QAAQ,KAAK,MAAM,CAAC;AAC7B;;;ADoCM;AApCN,IAAM,iBAAiB;AAAA,EACrB;AAAA,EACA;AAAA,IACE,UAAU;AAAA,MACR,SAAS;AAAA,QACP,SAAS;AAAA,QACT,aAAa;AAAA,QACb,SAAS;AAAA,QACT,WAAW;AAAA,QACX,OAAO;AAAA,QACP,MAAM;AAAA,MACR;AAAA,MACA,MAAM;AAAA,QACJ,SAAS;AAAA,QACT,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,iBAAiB;AAAA,MACf,SAAS;AAAA,MACT,MAAM;AAAA,IACR;AAAA,EACF;AACF;AAQA,IAAM,SAAe;AAAA,EACnB,CAAC,EAAE,WAAW,SAAS,MAAM,UAAU,OAAO,GAAG,MAAM,GAAG,QAAQ;AAChE,UAAM,OAAO;AACb,WACE;AAAA,MAAC;AAAA;AAAA,QACC,WAAW,GAAG,eAAe,EAAE,SAAS,MAAM,UAAU,CAAC,CAAC;AAAA,QAC1D;AAAA,QACC,GAAG;AAAA;AAAA,IACN;AAAA,EAEJ;AACF;AACA,OAAO,cAAc;;;AEjDrB,YAAYA,YAAW;AAQrB,gBAAAC,YAAA;AAJF,IAAM,OAAa,kBAGjB,CAAC,EAAE,WAAW,GAAG,MAAM,GAAG,QAC1B,gBAAAA;AAAA,EAAC;AAAA;AAAA,IACC;AAAA,IACA,WAAW;AAAA,MACT;AAAA,MACA;AAAA,IACF;AAAA,IACC,GAAG;AAAA;AACN,CACD;AACD,KAAK,cAAc;AAEnB,IAAM,aAAmB,kBAGvB,CAAC,EAAE,WAAW,GAAG,MAAM,GAAG,QAC1B,gBAAAA;AAAA,EAAC;AAAA;AAAA,IACC;AAAA,IACA,WAAW,GAAG,iCAAiC,SAAS;AAAA,IACvD,GAAG;AAAA;AACN,CACD;AACD,WAAW,cAAc;AAEzB,IAAM,YAAkB,kBAGtB,CAAC,EAAE,WAAW,GAAG,MAAM,GAAG,QAC1B,gBAAAA;AAAA,EAAC;AAAA;AAAA,IACC;AAAA,IACA,WAAW;AAAA,MACT;AAAA,MACA;AAAA,IACF;AAAA,IACC,GAAG;AAAA;AACN,CACD;AACD,UAAU,cAAc;AAExB,IAAM,kBAAwB,kBAG5B,CAAC,EAAE,WAAW,GAAG,MAAM,GAAG,QAC1B,gBAAAA;AAAA,EAAC;AAAA;AAAA,IACC;AAAA,IACA,WAAW,GAAG,+CAA+C,SAAS;AAAA,IACrE,GAAG;AAAA;AACN,CACD;AACD,gBAAgB,cAAc;AAE9B,IAAM,cAAoB,kBAGxB,CAAC,EAAE,WAAW,GAAG,MAAM,GAAG,QAC1B,gBAAAA,KAAC,SAAI,KAAU,WAAW,GAAG,YAAY,SAAS,GAAI,GAAG,OAAO,CACjE;AACD,YAAY,cAAc;AAE1B,IAAM,aAAmB,kBAGvB,CAAC,EAAE,WAAW,GAAG,MAAM,GAAG,QAC1B,gBAAAA;AAAA,EAAC;AAAA;AAAA,IACC;AAAA,IACA,WAAW,GAAG,8BAA8B,SAAS;AAAA,IACpD,GAAG;AAAA;AACN,CACD;AACD,WAAW,cAAc;;;AC5EzB,YAAYC,YAAW;AAUjB,gBAAAC,YAAA;AAHN,IAAM,QAAc;AAAA,EAClB,CAAC,EAAE,WAAW,MAAM,GAAG,MAAM,GAAG,QAAQ;AACtC,WACE,gBAAAA;AAAA,MAAC;AAAA;AAAA,QACC;AAAA,QACA,WAAW;AAAA,UACT;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,QACC,GAAG;AAAA;AAAA,IACN;AAAA,EAEJ;AACF;AACA,MAAM,cAAc;;;ACEZ,gBAAAC,MASE,YATF;AAXD,SAAS,YAAY;AAAA,EAC1B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAAqB;AACnB,SACE,qBAAC,QAAK,WAAU,mBACd;AAAA,oBAAAA,KAAC,SAAI,WAAU,wCACb,0BAAAA;AAAA,MAAC;AAAA;AAAA,QACC,KAAK;AAAA,QACL,KAAK;AAAA,QACL,WAAU;AAAA;AAAA,IACZ,GACF;AAAA,IACA,qBAAC,eAAY,WAAU,OACrB;AAAA,2BAAC,SAAI,WAAU,qCACb;AAAA,wBAAAA,KAAC,QAAG,WAAU,yBAAyB,gBAAK;AAAA,QAC5C,qBAAC,OAAE,WAAU,uBAAsB;AAAA;AAAA,UAAE,MAAM,QAAQ,CAAC;AAAA,WAAE;AAAA,SACxD;AAAA,MACC,eACC,gBAAAA,KAAC,OAAE,WAAU,iEACV,uBACH;AAAA,OAEJ;AAAA,IACA,gBAAAA,KAAC,cAAW,WAAU,YACpB,0BAAAA;AAAA,MAAC;AAAA;AAAA,QACC,SAAS,MAAM,2CAAc;AAAA,QAC7B,WAAU;AAAA,QACV,SAAQ;AAAA,QACT;AAAA;AAAA,IAED,GACF;AAAA,KACF;AAEJ;;;AC7BU,gBAAAC,MAOJ,QAAAC,aAPI;AAXH,SAAS,UAAU;AAAA,EACxB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAAmB;AACjB,SACE,gBAAAA,MAAC,QAAK,WAAU,mBACb;AAAA,aACC,gBAAAD,KAAC,SAAI,WAAU,uCACb,0BAAAA;AAAA,MAAC;AAAA;AAAA,QACC,KAAK;AAAA,QACL,KAAK;AAAA,QACL,WAAU;AAAA;AAAA,IACZ,GACF;AAAA,IAEF,gBAAAC,MAAC,eAAY,WAAU,OACrB;AAAA,sBAAAD,KAAC,QAAG,WAAU,yBAAyB,gBAAK;AAAA,MAC3C,eACC,gBAAAA,KAAC,OAAE,WAAU,iEACV,uBACH;AAAA,OAEJ;AAAA,IACA,gBAAAA,KAAC,cAAW,WAAU,YACpB,0BAAAA;AAAA,MAAC;AAAA;AAAA,QACC,SAAS,MAAM,6CAAe;AAAA,QAC9B,WAAU;AAAA,QACV,SAAQ;AAAA,QACT;AAAA;AAAA,IAED,GACF;AAAA,KACF;AAEJ;","names":["React","jsx","React","jsx","jsx","jsx","jsxs"]}